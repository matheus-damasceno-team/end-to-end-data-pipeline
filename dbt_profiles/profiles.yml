# dbt Connection Profile for ClickHouse

# See notes in dbt_project.yml for more details on profile configuration.
# This file will be mounted into the dbt_service container at /root/.dbt/profiles.yml

agribusiness_clickhouse: # This is the profile name referenced in dbt_project.yml
  target: dev
  outputs:
    dev:
      type: clickhouse
      host: clickhouse          # Service name from docker-compose.yml
      port: 8123                # ClickHouse HTTP port
      user: user                # User defined in docker-compose.yml for ClickHouse
      password: password          # Password defined in docker-compose.yml for ClickHouse
      database: agri_db         # Default database to connect to, created by ClickHouse service
      schema: agri_db           # Default schema/database for dbt to write to.
                                # In ClickHouse, schema often means database.
                                # Models can override this with their own schema config.
      # Optional settings:
      secure: false             # Set to true if using HTTPS for ClickHouse
      verify: false             # Set to true to verify server SSL certificate if secure=true
      connect_timeout: 10
      send_receive_timeout: 300
      # sync_request_timeout: 10 # If using sync requests
      # compress_block_size: 1048576
      # compression: false # Set to 'lz4' or 'zstd' to enable http compression if server supports it
      # custom_settings:
      #   # Example: 'extremes': True
      #   'enable_http_compression': True # Example for enabling http compression on client side
      #   # 'use_numpy': True # If your dbt-clickhouse adapter version supports numpy for performance
      # S3/MinIO settings for ClickHouse external tables or S3 table function (if dbt models use them directly)
      # These are generally not needed if dbt is only transforming data already in ClickHouse,
      # or if ClickHouse itself is configured globally for S3 access.
      # s3_access_key_id: 'admin' # MinIO access key
      # s3_secret_access_key: 'password' # MinIO secret key
      # s3_endpoint: 'http://minio:9000' # MinIO endpoint
      # use_ssl_for_s3: false # True if MinIO uses https
      #
      # threads: 4 # Number of threads dbt will use
      # keepalives_idle: 280 # TCP keepalive setting

# Notes on ClickHouse and dbt schemas:
# - The 'database' parameter in the profile specifies the ClickHouse database dbt connects to initially.
# - The 'schema' parameter in the profile is the default ClickHouse database where dbt will create models.
# - If a dbt model specifies `+schema: some_other_db` or `config(schema='some_other_db')`,
#   dbt will attempt to create the model in `some_other_db.model_name`.
# - The ClickHouse user ('user' in this case) needs permissions to create tables (and databases if dbt is expected to create them).
# - In our docker-compose, ClickHouse starts with a database `agri_db`.
#   Setting `schema: agri_db` here means models without specific schema config will go into `agri_db`.
#   The `fct_risk_analysis.sql` model specifies `schema: analytics`, so dbt will try to create `analytics.fct_risk_analysis`.
#   Ensure the ClickHouse user has rights to CREATE DATABASE analytics; or create it manually.
#   Alternatively, for simplicity in local dev, you could have all dbt models write to 'agri_db'.
#   To do this, set `schema: agri_db` in this profile and remove/comment out `schema: analytics` from the model SQL.
#   Or, ensure the `setup.sh` script (or ClickHouse init scripts if preferred) creates the `analytics` database.
#
# Example for creating database in ClickHouse SQL:
# CREATE DATABASE IF NOT EXISTS analytics;
#
# This profiles.yml assumes the dbt-clickhouse adapter is used.
# The dbt_service in docker-compose.yml uses an image with this adapter.
