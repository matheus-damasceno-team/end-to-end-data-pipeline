# Trino ClickHouse Connector Configuration
# This catalog will be named 'clickhouse' in Trino (matches filename)

connector.name=clickhouse
connection-url=jdbc:clickhouse://clickhouse:8123/default
# Note: Using HTTP port 8123. Native port 9000 could also be used if supported by JDBC driver and preferred.
# The ClickHouse JDBC driver typically uses the HTTP interface.
# Ensure the 'default' database exists or change to your target database.

connection-user=default # User for connecting to ClickHouse
# connection-password= # Password if the 'default' user has one set in users.xml
                       # Leave empty if default user has no password.

# Optional: Case-insensitive name matching (if ClickHouse table/column names differ in case)
# clickhouse.case-insensitive-name-matching=false # Default is false

# Optional: Mapping of Trino schemas to ClickHouse databases (if not 1:1)
# clickhouse.map-string-as-varchar=false # If true, maps ClickHouse String to Trino VARCHAR instead of unbounded VARCHAR

# Optional: Performance and query tuning
# clickhouse.query.batch-size=10000 # Rows fetched per batch
# clickhouse.query.max-query-length=1048576 # Max length of query string
# clickhouse.distributed-joins-enabled=false # If ClickHouse handles distributed joins

# SSL Configuration (if ClickHouse connection uses SSL)
# clickhouse.ssl.enabled=false
# clickhouse.ssl.keystore-path=/path/to/keystore.jks
# clickhouse.ssl.keystore-password=keystore_password
# clickhouse.ssl.truststore-path=/path/to/truststore.jks
# clickhouse.ssl.truststore-password=truststore_password

# Ensure the ClickHouse JDBC driver JAR is available to Trino.
# The standard Trino Docker image (trinodb/trino) includes many connectors.
# Check Trino documentation if you need to manually add the ClickHouse JDBC driver.
# For Trino 426, the ClickHouse connector should be bundled.
# The ClickHouse service name is 'clickhouse' and HTTP port is 8123, matching docker-compose.yml.
# The 'default' user in ClickHouse (from users.xml) is used.
# If you defined a specific user for Trino in users.xml, use that user/password here.
# This configuration allows Trino to query tables within the 'default' database (or schema) in ClickHouse.
# If dbt creates tables in a specific ClickHouse database (e.g., 'marts'), you might need to adjust
# the connection-url (e.g., jdbc:clickhouse://clickhouse:8123/marts) or query tables as 'marts.table_name'.
# Trino will typically show ClickHouse databases as schemas within the 'clickhouse' catalog.
# So, `SELECT * FROM clickhouse.marts.fct_analise_risco` would work if dbt creates tables in `marts` db.
# If dbt uses the `default` database but a `marts` schema prefix, then `clickhouse.default.marts_fct_analise_risco` might be how Trino sees it,
# or `clickhouse.default.fct_analise_risco` if dbt's schema config points to `default` and alias is used.
# dbt's `dbt_project.yml` has `schema: 'marts'` for the model, which usually translates to `CREATE TABLE marts.fct_analise_risco`.
# So, `SELECT * FROM clickhouse.marts.fct_analise_risco` should be the way to query via Trino.
# The connection URL `jdbc:clickhouse://clickhouse:8123/default` connects to the `default` database initially.
# Trino can still list and query other databases (schemas) like `marts` if the user has permissions.
# This setup is standard.
